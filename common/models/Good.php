<?php

namespace common\models;

use common\helpers\TranslitHelper;
use Yii;

/**
 * This is the model class for table "goods".
 *
 * @property integer $id
 * @property string $name
 * @property string $link
 * @property string $description
 * @property double $price
 * @property integer $categoryID
 * @property string $created
 * @property string $updated
 */
class Good extends \yii\db\ActiveRecord
{

    public function getPhotos(){
        return $this->hasMany(GoodPhoto::className(), ['goodID' => 'id'])->orderBy('order');
    }

    public function getCategory(){
        return $this->hasOne(Category::className(), ['id' => 'categoryID']);
    }

    public function getBalances(){
        return $this->hasMany(GoodStore::className(), ['goodID' => 'id'])->with('store');
    }

    public function getBalance($id){
        foreach($this->balances as $balance){
            if($balance->storeID == $id){
                return $balance;
            }
        }

        return new GoodStore();
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'goods';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['description'], 'string'],
            [['price'], 'number'],
            [['categoryID'], 'integer'],
            [['created', 'updated'], 'safe'],
            [['name', 'link'], 'string', 'max' => 255],
        ];
    }

    public function beforeSave($insert)
    {
        if($this->isNewRecord){
            $this->created = date('Y-m-d H:i:s');
        }

        $this->updated = date('Y-m-d H:i:s');

        if($this->name != $this->getOldAttribute('name')){
            $this->link = TranslitHelper::to($this->name);
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Название',
            'link' => 'Ссылка',
            'description' => 'Описание',
            'price' => 'Цена',
            'category' => 'Категория',
            'created' => 'Создано',
            'updated' => 'Обновлено',
        ];
    }
}
